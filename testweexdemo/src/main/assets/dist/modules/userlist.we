<template>
	<div>
		<list class="style-list">
			<cell repeat="{{item in userlist}}" index="{{$index}}">
				<div class="div-icon style-border" if="{{item.showType1}}">
					<img class="img-icon" src="{{item.src}}">
					<text class="text-icon style-text">{{item.title}}</text>
				</div>

				<div class="div-singletext style-border" if="{{item.showType2}}">
					<text class="style-text text-left-100">{{item.title}}</text>
					<text class="style-text text-right-flex">{{item.defaultvalue}}</text>
					<img class="img-arrow-20" src="{{item.src}}"/>
				</div>

				<div class="style-border div-double-row" if="{{item.showType3}}">
					<div class="div-doubletext-column">
						<text class="style-text text-left-flex">{{item.title}}</text>
						<text class="style-text text-left-flex">{{item.defaultvalue}}</text>
					</div>
					<img class="img-arrow-20" src="{{item.src}}"/>
				</div>

				<div class="style-border div-double-column" if="{{item.showType4}}">
					<text class="style-text text-left-flex">{{item.title}}</text>
					<div class="div-single-textAndImg">
						<text class="style-text text-left-flex">{{item.value}}</text>
						<img class="img-arrow-20" src="{{item.src}}">
					</div>
				</div>
			</cell>
		</list>
	</div>
</template>

<style >
	.style-list{
		margin-left: 20px;
		margin-right: 20px;
		padding: 10px;
		background-color: #eeeeee;
	}	
	.style-border{
		border-bottom-width: 1px;
	}
	.style-text{
		font-size: 15px;
	}
	.div-icon{
		width: inherit;
		height: auto;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}
	.div-singletext{
		width: inherit;
		height: 100px;
		flex-direction: row;
		justify-content: center;
		align-items: center;
	}
	.div-double-row{
		width: inherit;
		height: 200px;
		flex-direction: row;
		justify-content: center;
		align-items: center;
	}
	.div-doubletext-column{
		height: 200px;
		flex:1;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
	}
	.div-double-column{
		width: inherit;
		height: 200px;
		flex-direction: column;
		justify-content: flex-start;
		align-items: flex-start;
	}
	.div-single-textAndImg{
		width: 690;
		flex: 1;
		flex-direction: row;
		justify-content: flex-start;
		align-items: center;
	}

	.img-icon{
		width: 50px;
		height: 50px;
		margin-top: 10px;
		margin-bottom: 5px;
	}
	.img-arrow-20{
		width: 20px;
		height: 20px;
		margin-left: 10px;
		margin-right: 10px;
	}
	.text-icon{
		width: inherit;
		height: auto;
		margin-top: 10px;
		margin-bottom: 10px;
	}
	.text-left-100{
		width: 100px;
		text-align: left;
		margin-left: 10px;
	}
	.text-right-flex{
		flex:1;
		height: auto;
		text-align: right;
	}
	.text-left-flex{
		border-bottom-width: 1px;
		flex: 1;
		text-align: left;
		margin-left: 10px;
		justify-content: center;
	}
	.text-left-flex-inrow{
		flex: 1;
		text-align: left;
		margin-left: 10px;
		justify-content: center;

	}
</style>

<script >

    require('weex-components');
    var navigator = require('@weex-module/navigator');
    var modal=require('@weex-module/modal');
    var apis=require('../mycommon/myapi');


	module.exports={
		data:{
			userlist:[
			{type:1,title:"用户头像",src:"http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png",defaultvalue:"",warn:"",value:""},
			{type:2,title:"姓名",src:"http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png",defaultvalue:"输入姓名",warn:"最多输入10个字",value:""},
			{type:3,title:"职业",src:"http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png",defaultvalue:"无",warn:""},
			{type:4,title:"出生日期",src:"http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png",defaultvalue:"",warn:"",value:"2016-12-08"}
			],
			userinfolist:[],
			currentIndex : 0, 
			baseURL:''

		},
		computed:{},
		methods:{

            getReadingIndex: function (index, loadmore) {
                var self = this;
                apis.getReadingIndex(index, function (ret) {
                    if (!loadmore) {
                        self.userinfolist = [];
                    }
                    for (var i = 0; i < ret.data.length; i++) {
                        var items = ret.data[i].items;
                        self.getType(items,function(item){
                        	self.userinfolist.push(item);
                        });                        
                    }
                    self.showListItem = self.userinfolist.length > 0;
                });
            },
            getType:function(items,callback){
                for (var j = 0; j < items.length; j++) {
                	items[j].showType1 = items[j].type == 1;
                	items[j].showType2 = items[j].type == 2;
                	items[j].showType3 = items[j].type == 3;
                	items[j].showType4 = items[j].type == 4;
                	callback(items[j]);
                }
            }
		},

        created: function () {
            var self = this; 
            self.currentIndex=0;
            self.getReadingIndex(self.currentIndex,false);
            self.getType(self.userlist,function(item){});
            var base=apis.getBaseUrl(self.$getConfig().bundleUrl,true);
            this.baseURL=base;
        },
        ready: function () {
            var self = this;
        }  
	}
	
</script>