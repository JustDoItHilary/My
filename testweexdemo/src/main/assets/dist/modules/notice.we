<template>
	<div>
		<list class="reading-list">
			
            <cell class="row" repeat="{{item in readingList}}" index="{{$index}}">
                <div class="reading-item" if="{{item.showType1}}" cid="{{item.content.content_id}}"
                     onclick="onReadCellClick">
                    <notice-item title="{{item.content.hp_title}}" author="{{item.content.author[0].user_name}}"
                               content="{{item.content.guide_word}}"></read-item>
                </div>
                <div class="reading-item" if="{{item.showType2}}" cid="{{item.content.id}}"
                     onclick="onReadClick">
                    <notice-item title="{{item.content.title}}" author="{{item.content.author.user_name}}"
                               content="{{item.content.excerpt}}"></read-item>
                </div>
                <div class="reading-item" if="{{item.showType3}}" cid="{{item.content.question_id}}"
                     onclick="onQuestionCellClick">
                    <notice-item title="{{item.content.question_title}}" author="{{item.content.answer_title}}"
                               content="{{item.content.answer_content}}"></read-item>
                </div>
            </cell>
		</list>
	</div>
</template>

<style>
    .top-slider {
        flex-direction: row;
        height: 360px;
        width: 750px;
    }

    .slider-item {
        height: 360px;
        width: 750px;
    }

    .reading-list {
        margin-left: 20px;
        margin-right: 20px;
    }

    .refresh-view {
        height: 80px;
        width: 750px;
        justify-content: center;
        align-items: center;
    }

    .refresh-arrow {
        font-size: 30px;
        color: #45b5f0;
    }

    .row {
        width: 750px;
    }

    .reading-item {
        justify-content: flex-start;
        border-bottom-width: 1px;
        border-bottom-color: #d4d4d4;
        padding: 20px;
    }

    .indicator {
        position: absolute;
        width: 690px;
        height: 400px;
        top: 140px;
        left: 240px;
        itemColor: #dddddd;
        itemSelectedColor: #45b5f0;
        item-size: 15;
    }
	
</style>

<script>
	var modal=require('@weex-module/modal');
	var apis=require('../common/api');
	var navigator=require('@weex-module/navigator');

	module.exports={
		data:{
			readingList:[],
			index:0,
			baseURL:"",
		},
		methods:{
			getReadingList:function(index){
				var self=this;
				apis.getReadingIndex(index,function(ret){
                    // if (!loadmore) {
                        self.readingList = [];
                    // }
                    for (var i = 0; i < ret.data.length; i++) {
                        var items = ret.data[i].items;
                        for (var j = 0; j < items.length; j++) {
                            items[j].showType1 = items[j].type == 1;
                            items[j].showType2 = items[j].type == 2;
                            items[j].showType3 = items[j].type == 3;
                            self.readingList.push(items[j]);
                        }
                    }
				});
			},
			onReadClick:function(e){
                var self = this;
                var itemid = e.target.attr.cid;
                self.openReadDetail(itemid);
			},
			openReadDetail:function(id){
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/notice-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                modal.toast({'message':e,'doation':1});
                });
			},
            onReadCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openEssayDetail(itemid);
            },
            onSerialCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openSerialDetail(itemid);
            },
            onQuestionCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openQuestionDetail(itemid);
            },
            openEssayDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/essay-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });                
                require('@weex-module/myModule').printLog(this.baseURL + 'modules/essay-detail.js?id=' + id);
            },
            openSerialDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/serial-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                    modal.toast({'message':e,'doation':1});
                });
            },
            openQuestionDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/question-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });
            },
		},
		created:function(){
			var self=this;
			self.index=0;
			self.getReadingList(self.index);
            var base = apis.getBaseUrl(self.$getConfig().bundleUrl, true);            
            this.baseURL = base;

		}
	}
</script>