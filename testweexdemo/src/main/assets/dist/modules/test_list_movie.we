<template>
    <div>
        <nav-bar-normal></nav-bar-normal>
        <list class="reading-list">
            
            <cell class="row" repeat="{{item in readingList}}" index="{{$index}}">
                <div class="reading-item" if="{{item.showType1}}" cid="{{item.content.content_id}}"
                     onclick="onReadCellClick">
                     <image src="http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png"/>
                     <text class="text-title">{{item.content.hp_title}}</text>
                </div>

                <div class="reading-item" if="{{item.showType2}}" cid="{{item.content.id}}"
                     onclick="onSerialCellClick">
                     <image src="http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png"/>
                     <text class="text-title">{{item.content.title}}</text>
                     <text class="text-author">{{item.content.author.user_name}}</text>
                </div>

                <div class="reading-item" if="{{item.showType3}}" cid="{{item.content.question_id}}"
                     onclick="onQuestionCellClick">
                     <image src="http://gtms01.alicdn.com/tps/i1/TB1qw.hMpXXXXagXXXX9t7RGVXX-46-46.png"/>
                     <text class="text-title">{{item.content.question_title}}</text>
                     <text class="text-author">{{item.content.answer_title}}</text>
                     <text class="text-content-short">{{item.content.answer_content}}</text>
                </div>

            </cell>


            <loading class="refresh-view" display="{{loading_display}}" onloading="onloading">
                <text class="refresh-arrow"
                      if="{{(refresh_display==='hide')}}">加载更多
                </text>
                <loading-indicator></loading-indicator>
            </loading>
        </list>
    </div>
</template>

<style>
    .top-slider {
        flex-direction: row;
        height: 360px;
        width: 750px;
    }

    .slider-item {
        height: 360px;
        width: 750px;
    }

    .reading-list {
        margin-left: 20px;
        margin-right: 20px;
    }

    .refresh-view {
        height: 80px;
        width: 750px;
        justify-content: center;
        align-items: center;
    }

    .refresh-arrow {
        font-size: 30px;
        color: #45b5f0;
    }

    .row {
        width: 750px;
    }

    .reading-item {
        justify-content: center;
        border-bottom-width: 1px;
        border-bottom-color: #d4d4d4;
        padding: 20px;
    }

    .indicator {
        position: absolute;
        width: 690px;
        height: 400px;
        top: 140px;
        left: 240px;
        itemColor: #dddddd;
        itemSelectedColor: #45b5f0;
        item-size: 15;
    }
    .item-text {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .text-title {
        color: black;
        font-size: 36px;
        margin-top: 20px;
        font-weight: bold;
        /*width:700px;*/
    }

    .text-author {
        color: black;
        font-size: 24px;
        margin-top: 10px;

    }

    .date {
        color: #7a7a7a;
        margin-top: 30px;
    }

    .text-more {
        color: #29a7e2;
        margin-top: 19px;
    }

    .text-content-short {
        max-height: 78px;
        margin-top: 28px;
        color: #333;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
    }

</style>


<script>
    require('weex-components');
    var modal = require('@weex-module/modal');
    var apis = require('../common/api');
    var navigator = require('@weex-module/navigator');

    module.exports = {
        data: {
            currentIndex: 0,
            showSliderCell: false,
            refresh_display: 'hide',
            loading_display: 'hide',
            imageList: [],
            readingList: [],
            showListItem: false,
            baseURL: ''
        },
        computed: {},
        methods: {

            onrefresh: function (e) {
                var self = this;
                self.refresh_display = 'show';
                self.currentIndex = 0;
                self.getCarouselData();
                self.getReadingIndex(self.currentIndex, false);
                self.refresh_display = 'hide';

            },
            onloading: function (e) {
                var self = this;
                this.loading_display = "show";
                self.refresh_display = 'show';

                self.getReadingIndex(++self.currentIndex, true);
                self.loading_display = "hide";
                self.refresh_display = 'hide';


            },
            getReadingIndex: function (index, loadmore) {
                var self = this;
                apis.getReadingIndex(index, function (ret) {
                    if (!loadmore) {
                        self.readingList = [];
                    }
                    for (var i = 0; i < ret.data.length; i++) {
                        var items = ret.data[i].items;
                        for (var j = 0; j < items.length; j++) {
                            items[j].showType1 = items[j].type == 1;
                            items[j].showType2 = items[j].type == 2;
                            items[j].showType3 = items[j].type == 3;
                            self.readingList.push(items[j]);
                        }
                    }
                    self.showListItem = self.readingList.length > 0;
                });
            },
            getCarouselData: function () {
                var self = this;
                self.showSliderCell = false;
                apis.getReadingCarousel(function (ret) {

                    self.imageList = ret.data;
                    self.showSliderCell = true;
                });
            },
            onSliderItemClick: function (e) {
                var self = this;
                var itemid = e.target.attr.itemid;
                var title = e.target.attr.itemtitle;
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/carouse-list.js?id=' + itemid + "&title=" + title,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });

            },
            onReadCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openEssayDetail(itemid);
            },
            onSerialCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openSerialDetail(itemid);
            },
            onQuestionCellClick: function (e) {
                var self = this;
                var itemid = e.target.attr.cid;
                self.openQuestionDetail(itemid);
            },
            openEssayDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/essay-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });
            },
            openSerialDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/serial-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });
            },
            openQuestionDetail: function (id) {
                var vm = this;
                var params = {
                    'url': this.baseURL + 'modules/question-detail.js?id=' + id,
                    'animated': 'true'
                };
                navigator.push(params, function (e) {
                    //callback
                });
            }
        },
        created: function () {
            var self = this;
            self.currentIndex = 0;
            self.getCarouselData();
            self.getReadingIndex(self.currentIndex, false);
            var base = apis.getBaseUrl(self.$getConfig().bundleUrl, true);
            this.baseURL = base;

        },
        ready: function () {
            var self = this;
        }
    }
</script>
